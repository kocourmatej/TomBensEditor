<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>change the way u like</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///flap setup
flap_width=256;
flap_height=28;
flap_caption='Object Inspector';
flap_color=c_yellow;
flap_alpha=0.3;
flap_font=-1;
flap_font_color=c_black;
flap_font_alpha=1;







</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control panel setup
cp_width=flap_width; //same as flap
cp_height=1;

cp_font=-1;
cp_font_color=c_black;
cp_font_alpha=0;

//control panel buttons

var i=1; //first
cp_color[i]=c_green;
cp_alpha[i]=1;
cp_outline_color[i]=c_black;
cp_outline_alpha[i]=1;
cp_caption[i]='M';

i++; //&lt;
cp_color[i]=c_silver;
cp_alpha[i]=flap_alpha;
cp_outline_color[i]=c_black;
cp_outline_alpha[i]=flap_alpha;
cp_caption[i]='&lt;';


i++; //&gt;
cp_color[i]=c_silver;
cp_alpha[i]=flap_alpha;
cp_outline_color[i]=c_black;
cp_outline_alpha[i]=flap_alpha;
cp_caption[i]='&gt;';

i++; //&gt;
cp_color[i]=c_aqua;
cp_alpha[i]=flap_alpha;
cp_outline_color[i]=c_black;
cp_outline_alpha[i]=flap_alpha;
cp_caption[i]='*';


repeat(15-5) // eight buttons
{
i++;
cp_color[i]=c_gray;
cp_alpha[i]=0;
cp_outline_color[i]=c_black;
cp_outline_alpha[i]=flap_alpha;
cp_caption[i]='';
}

i++; //last
cp_color[i]=c_red;
cp_alpha[i]=1;
cp_outline_color[i]=c_black;
cp_outline_alpha[i]=1;
cp_caption[i]='X';

buttons=i;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ribbon setup
ribbon_width=256;
ribbon_height=24;

ribbon_font=flap_font;
ribbon_font_color=c_black;
ribbon_font_alpha=1;

mtl=12; //max text length for right side






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ribbon names - changes should reflect content of EndStep

var i=1; //first
ribbon_caption[i]='Name:';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='max_surfaces:';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='grid_arguments:';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='source_mode: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='mouse:';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='surface position: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;
ss=0;


i++;
ribbon_caption[i]='surface ID: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='x1: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='y1: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='x2: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='y2: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='selected: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='baked: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='xs1: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='ys1: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='xs2: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='ys2: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='xscale: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;

i++;
ribbon_caption[i]='yscale: ';
ribbon_color[i]=c_ltgray;
ribbon_alpha[i]=flap_alpha;


ribbons=i;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///make singleton
if instance_number(object_index)&gt;1 instance_destroy();


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///precompute flap
w=flap_width/2;
h=flap_height/2;
pressed=false;
drag=false;
x=w; y=h+60;
xstart=w; ystart=h;
dx=0; dy=0;
show_flap_only=false;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///precompute control panel

cp_w=(cp_width/buttons)/2;
cp_h=cp_height/2;

for(i=1;i&lt;=buttons;i++)
{
cp_x[i]=-w-cp_w+(2*cp_w*i);
cp_y[i]=h+cp_h;
cp_pressed[i]=false;
}


inactive[1]=cp_color[1];
active[1]=c_gray;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///precompute ribbons

r_w=ribbon_width/2;
r_h=ribbon_height/2;
rb=5; //borders

for(i=1;i&lt;=ribbons;i++)
{
r_x[i]=0;                       //unused
r_y[i]=h+cp_height+r_h+rb+(ribbon_height*(i-1));     //relative to flap
r_pressed[i]=false;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///various
subject=noone;
follow_nearest=true;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>change with care</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>show_flap_only</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables

//defaults for noone

i=1; //name
v[i]='noone'; 
repeat(ribbons-1)
{
i++; // all empty
v[i]='';
}


if subject!=noone
{
if instance_exists(subject)
{
i=1; //name
v[i]=object_get_name(subject.object_index);
v[i]=string_copy(v[i],0,mtl);

i++; //max_surfaces
v[i]=string(subject.max_surfaces);
v[i]=string_copy(v[i],0,mtl);

i++; //grid_arguments
v[i]=string(subject.grid_arguments);
v[i]=string_copy(v[i],0,mtl);

i++; //source_mode
v[i]=string(subject.source_mode);
v[i]=string_copy(v[i],0,mtl);

i++; //mouse in window
v[i]=string(mouse_x)+','+string(mouse_y);
v[i]=string_copy(v[i],0,mtl);

i++; //surface position in grid
v[i]=string(ss);
v[i]=string_copy(v[i],0,mtl);

i++; //surface ID
v[i]=string(subject.g[#_id,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //x1
v[i]=string(subject.g[#_x1,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //y1
v[i]=string(subject.g[#_y1,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //x2
v[i]=string(subject.g[#_x2,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //y2
v[i]=string(subject.g[#_y2,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //selected
v[i]=string(subject.g[#_selected,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //baked
v[i]=string(subject.g[#_baked,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //xs1
v[i]=string(subject.g[#_xs1,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //ys1
v[i]=string(subject.g[#_ys1,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //xs2
v[i]=string(subject.g[#_xs2,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //ys2
v[i]=string(subject.g[#_ys2,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //xscale
v[i]=string(subject.g[#_xscale,ss]);
v[i]=string_copy(v[i],0,mtl);

i++; //yscale
v[i]=string(subject.g[#_yscale,ss]);
v[i]=string_copy(v[i],0,mtl);











}
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>show_flap_only</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse seek
wm_x=window_mouse_get_x();
wm_y=window_mouse_get_y();
dm_x=display_mouse_get_x();
dm_y=display_mouse_get_y();

in_x=(wm_x&gt;x-w)&amp;&amp;(wm_x&lt;x+w);
in_y=(wm_y&gt;y-h)&amp;&amp;(wm_y&lt;y+h);
in_area=in_x &amp;&amp; in_y;
if !in_area pressed=false;

var cn_x,cn_y;
for(i=1;i&lt;=buttons;i++)
{
cn_x=(wm_x&gt;(x+cp_x[i]-cp_w))&amp;&amp;(wm_x&lt;(x+cp_x[i]+cp_w));
cn_y=(wm_y&gt;(y+cp_y[i]-cp_h))&amp;&amp;(wm_y&lt;(y+cp_y[i]+cp_h));
cp_in_area[i]=cn_x &amp;&amp; cn_y;
if !cp_in_area[i] cp_pressed[i]=false; 
}

if drag { x=dm_x-dx; y=dm_y-dy; } //reposition

if follow_nearest
{
var bup_x,bup_y;
bup_x=x; bup_y=y; x=-80000; y=-80000;
subject=instance_nearest(mouse_x,mouse_y,all);
x=bup_x; y=bup_y;
}

if instance_exists(oController) subject=oController.id;



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse
if drag { x=dm_x-dx; y=dm_y-dy; }
drag=false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse
if in_area &amp;&amp; pressed { event_user(0); show_debug_message('ev0');} //release event for flap
pressed=false;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cp buttons
for(i=1;i&lt;=buttons;i++)
{
if cp_in_area[i] &amp;&amp; cp_pressed[i]==true { event_user(i); } //release event for cp
cp_pressed[i]=false; 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse
if in_area 
{ 
 if keyboard_check_direct(vk_home) 
  { x=xstart; y=ystart; } 
  else 
  { drag=true; dx=dm_x-x; dy=dm_y-y; }
}
  



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///mouse
if in_area { pressed=true; }



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cp buttons
for(i=1;i&lt;=buttons;i++)
{
if cp_in_area[i] { cp_pressed[i]=true; }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control panel function last - suicide 
show_debug_message('ev15');
instance_destroy();


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control panel function last + CTRL + ALT- end game
if keyboard_check_direct(vk_lcontrol)
{
if keyboard_check_direct(vk_lalt)
{
game_end();
}}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control panel function - next instance
show_debug_message('ev4');

  
  with(all)
  {
   effect_create_above(ef_spark,x,y,0,other.flap_color);
  }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control panel function - next instance
show_debug_message('ev3');

if !follow_nearest 
 {
  id_list=ds_list_create();
  place=-1;
  number=0;
  
  with(all)
  {
   ds_list_add(other.id_list,id);
   if id==other.subject { other.place=other.number; show_debug_message('found'+string(other.number)+'='+string(id));}
   other.number++;
  }
  
  place++;
  if place&gt;number-1 place=0 else { if place&lt;0 place=number-1; }
  show_debug_message('place'+string(place));
  
  subject=ds_list_find_value(id_list,place);
  ds_list_destroy(id_list);
 }
 





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control panel function - previous instance
show_debug_message('ev2');

if !follow_nearest 
 {
  id_list=ds_list_create();
  place=-1;
  number=0;
  
  with(all)
  {
   ds_list_add(other.id_list,id);
   if id==other.subject { other.place=other.number; show_debug_message('found'+string(other.number)+'='+string(id));}
   other.number++;
  }
  
  place--;
  if place&gt;number-1 place=0 else { if place&lt;0 place=number-1; }
  show_debug_message('place'+string(place));
  
  subject=ds_list_find_value(id_list,place);
  ds_list_destroy(id_list);
 }


 




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control panel function first - inspect object nearest mouse or not
show_debug_message('ev1');
follow_nearest=!follow_nearest;
if follow_nearest { cp_color[1]=inactive[1]; } else { cp_color[1]=active[1]; }


 




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///flap function - wrap/unwrap
show_flap_only=!show_flap_only;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>don't change</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw a flap
bc=draw_get_colour();
ba=draw_get_alpha();

draw_set_blend_mode(bm_normal);
draw_set_font(flap_font);
draw_set_halign(fa_center);
draw_set_valign(fa_center);

if !drag
{
draw_set_color(flap_color);
draw_set_alpha(flap_alpha);
draw_button(x-w,y-h,x+w,y+h,!pressed);
draw_set_alpha(flap_font_alpha);
draw_set_colour(flap_font_color);
draw_text(x,y,flap_caption+'   '+string(fps)+'fps');
}
else
{
draw_set_color(c_white);
draw_set_alpha(1);
draw_rectangle(x-w+1,y-h+1,x+w-1,y+h-1,true);
draw_set_color(c_black);
draw_set_alpha(1);
draw_rectangle(x-w+1,y-h+1,x+w-1,y+h-1,true);

}

draw_set_colour(bc);
draw_set_alpha(ba);


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw control panel

if !drag
{
for(i=1;i&lt;=buttons;i++)
{
draw_set_alpha(cp_alpha[i]);
draw_set_colour(cp_color[i]);
draw_rectangle(x+cp_x[i]-cp_w,y+cp_y[i]-cp_h,x+cp_x[i]+cp_w,y+cp_y[i]+cp_h,false);
draw_set_colour(cp_outline_color[i]);
draw_set_alpha(cp_outline_alpha[i]);
draw_rectangle(x+cp_x[i]-cp_w,y+cp_y[i]-cp_h,x+cp_x[i]+cp_w,y+cp_y[i]+cp_h,true);

if !cp_pressed[i]
{
draw_set_alpha(cp_font_alpha);
draw_set_colour(cp_font_color);
draw_set_font(cp_font);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_text(x+cp_x[i],y+cp_y[i],cp_caption[i]);
}
}
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>show_flap_only</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>false</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw ribbons

if !drag
{
for(i=1;i&lt;=ribbons;i++)
{
draw_set_alpha(ribbon_alpha[i]);
draw_set_colour(ribbon_color[i]);
draw_rectangle(x-r_w,y+r_y[i]-(r_h),x+r_w,y+r_y[i]+(r_h),false);

if !r_pressed[i]
{
//left side
draw_set_alpha(ribbon_font_alpha);
draw_set_colour(ribbon_font_color);
draw_set_font(ribbon_font);
draw_set_halign(fa_left);
draw_set_valign(fa_center);
draw_text(x-r_w+rb,y+r_y[i],ribbon_caption[i]);

//right side
draw_set_halign(fa_right);
draw_text(x+r_w-rb,y+r_y[i],v[i]);

}
}
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="10" enumb="39">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ss&lt;oController.max_surfaces ss++;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="37">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ss&gt;0 ss--;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>change or delete if unwanted</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TAB visibility
if keyboard_check_released(vk_tab)
{
visible=!visible;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
